{
	"id": "d3e2667276d21ad3782482b4ae53a445",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.25",
	"solcLongVersion": "0.4.25+commit.59dbf8f1",
	"input": {
		"language": "Solidity",
		"sources": {
			"Victim.sol": {
				"content": "pragma solidity = 0.4.25;\r\n\r\ncontract D0n4t3 {\r\n    address public owner;\r\n    uint256 public money;\r\n\r\n    mapping(address => int256) public contributions;\r\n\r\n    bool public withdrawn;\r\n\r\n    constructor() public payable {\r\n        contributions[0x617F2E2fD72FD9D5503197092aC168c91465E7f2] = int256(\r\n            79000000000000000000000000000000000000\r\n        );\r\n        owner = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2;\r\n        money = msg.value;\r\n        withdrawn = false;\r\n    }\r\n\r\n    function gift() public payable {\r\n        require(contributions[msg.sender] == 0 && msg.value == 5 ether);\r\n        contributions[msg.sender] = int256(msg.value) * 10;\r\n        money += msg.value;\r\n    }\r\n\r\n    function takeSomeMoney() public {\r\n        require(msg.sender == owner && withdrawn == false);\r\n        uint256 someMoney = money / 20;\r\n        if (msg.sender.call.value(someMoney)()) {\r\n            money -= someMoney;\r\n        }\r\n        withdrawn = true;\r\n    }\r\n\r\n    function contribute(int256 _factor) public {\r\n        require(contributions[msg.sender] != 0 && _factor < 10);\r\n        contributions[msg.sender] *= _factor;\r\n    }\r\n\r\n    function claimContract() public {\r\n        require(contributions[msg.sender] > contributions[owner]);\r\n        owner = msg.sender;\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Victim.sol": {
				"D0n4t3": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "gift",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "contributions",
							"outputs": [
								{
									"name": "",
									"type": "int256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "money",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "claimContract",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_factor",
									"type": "int256"
								}
							],
							"name": "contribute",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "takeSomeMoney",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "withdrawn",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Victim.sol\":29:1292  contract D0n4t3 {\r... */\n  mstore(0x40, 0x80)\n    /* \"Victim.sol\":315:353  79000000000000000000000000000000000000 */\n  0x3b6ed8b833092fb2545615f000000000\n    /* \"Victim.sol\":234:247  contributions */\n  0x2\n    /* \"Victim.sol\":234:291  contributions[0x617F2E2fD72FD9D5503197092aC168c91465E7f2] */\n  0x0\n    /* \"Victim.sol\":248:290  0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  0x617f2e2fd72fd9d5503197092ac168c91465e7f2\n    /* \"Victim.sol\":234:291  contributions[0x617F2E2fD72FD9D5503197092aC168c91465E7f2] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x0\n  keccak256\n    /* \"Victim.sol\":234:364  contributions[0x617F2E2fD72FD9D5503197092aC168c91465E7f2] = int256(\r... */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Victim.sol\":383:425  0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  0x617f2e2fd72fd9d5503197092ac168c91465e7f2\n    /* \"Victim.sol\":375:380  owner */\n  0x0\n  dup1\n    /* \"Victim.sol\":375:425  owner = 0x617F2E2fD72FD9D5503197092aC168c91465E7f2 */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Victim.sol\":444:453  msg.value */\n  callvalue\n    /* \"Victim.sol\":436:441  money */\n  0x1\n    /* \"Victim.sol\":436:453  money = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Victim.sol\":476:481  false */\n  0x0\n    /* \"Victim.sol\":464:473  withdrawn */\n  0x3\n  0x0\n    /* \"Victim.sol\":464:481  withdrawn = false */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Victim.sol\":29:1292  contract D0n4t3 {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Victim.sol\":29:1292  contract D0n4t3 {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x24b04905\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x42e94c90\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4ddd108a\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x66345da4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x6d73fa74\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x80d4a64e\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc80ec522\n      eq\n      tag_9\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Victim.sol\":497:700  function gift() public payable {\r... */\n    tag_2:\n      tag_10\n      jump(tag_11)\n    tag_10:\n      stop\n        /* \"Victim.sol\":108:155  mapping(address => int256) public contributions */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_12:\n        /* \"Victim.sol\":108:155  mapping(address => int256) public contributions */\n      pop\n      tag_13\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_14)\n    tag_13:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Victim.sol\":79:99  uint256 public money */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_15:\n        /* \"Victim.sol\":79:99  uint256 public money */\n      pop\n      tag_16\n      jump(tag_17)\n    tag_16:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Victim.sol\":1152:1289  function claimContract() public {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"Victim.sol\":1152:1289  function claimContract() public {\r... */\n      pop\n      tag_19\n      jump(tag_20)\n    tag_19:\n      stop\n        /* \"Victim.sol\":980:1144  function contribute(int256 _factor) public {\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_21\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_21:\n        /* \"Victim.sol\":980:1144  function contribute(int256 _factor) public {\r... */\n      pop\n      tag_22\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_23)\n    tag_22:\n      stop\n        /* \"Victim.sol\":708:972  function takeSomeMoney() public {\r... */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_24:\n        /* \"Victim.sol\":708:972  function takeSomeMoney() public {\r... */\n      pop\n      tag_25\n      jump(tag_26)\n    tag_25:\n      stop\n        /* \"Victim.sol\":52:72  address public owner */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_27:\n        /* \"Victim.sol\":52:72  address public owner */\n      pop\n      tag_28\n      jump(tag_29)\n    tag_28:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Victim.sol\":164:185  bool public withdrawn */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_30:\n        /* \"Victim.sol\":164:185  bool public withdrawn */\n      pop\n      tag_31\n      jump(tag_32)\n    tag_31:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Victim.sol\":497:700  function gift() public payable {\r... */\n    tag_11:\n        /* \"Victim.sol\":576:577  0 */\n      0x0\n        /* \"Victim.sol\":547:560  contributions */\n      0x2\n        /* \"Victim.sol\":547:572  contributions[msg.sender] */\n      0x0\n        /* \"Victim.sol\":561:571  msg.sender */\n      caller\n        /* \"Victim.sol\":547:572  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Victim.sol\":547:577  contributions[msg.sender] == 0 */\n      eq\n        /* \"Victim.sol\":547:601  contributions[msg.sender] == 0 && msg.value == 5 ether */\n      dup1\n      iszero\n      tag_34\n      jumpi\n      pop\n        /* \"Victim.sol\":594:601  5 ether */\n      0x4563918244f40000\n        /* \"Victim.sol\":581:590  msg.value */\n      callvalue\n        /* \"Victim.sol\":581:601  msg.value == 5 ether */\n      eq\n        /* \"Victim.sol\":547:601  contributions[msg.sender] == 0 && msg.value == 5 ether */\n    tag_34:\n        /* \"Victim.sol\":539:602  require(contributions[msg.sender] == 0 && msg.value == 5 ether) */\n      iszero\n      iszero\n      tag_35\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_35:\n        /* \"Victim.sol\":661:663  10 */\n      0xa\n        /* \"Victim.sol\":648:657  msg.value */\n      callvalue\n        /* \"Victim.sol\":641:663  int256(msg.value) * 10 */\n      mul\n        /* \"Victim.sol\":613:626  contributions */\n      0x2\n        /* \"Victim.sol\":613:638  contributions[msg.sender] */\n      0x0\n        /* \"Victim.sol\":627:637  msg.sender */\n      caller\n        /* \"Victim.sol\":613:638  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Victim.sol\":613:663  contributions[msg.sender] = int256(msg.value) * 10 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Victim.sol\":683:692  msg.value */\n      callvalue\n        /* \"Victim.sol\":674:679  money */\n      0x1\n      0x0\n        /* \"Victim.sol\":674:692  money += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Victim.sol\":497:700  function gift() public payable {\r... */\n      jump\t// out\n        /* \"Victim.sol\":108:155  mapping(address => int256) public contributions */\n    tag_14:\n      mstore(0x20, 0x2)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Victim.sol\":79:99  uint256 public money */\n    tag_17:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"Victim.sol\":1152:1289  function claimContract() public {\r... */\n    tag_20:\n        /* \"Victim.sol\":1231:1244  contributions */\n      0x2\n        /* \"Victim.sol\":1231:1251  contributions[owner] */\n      0x0\n        /* \"Victim.sol\":1245:1250  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Victim.sol\":1231:1251  contributions[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Victim.sol\":1203:1216  contributions */\n      0x2\n        /* \"Victim.sol\":1203:1228  contributions[msg.sender] */\n      0x0\n        /* \"Victim.sol\":1217:1227  msg.sender */\n      caller\n        /* \"Victim.sol\":1203:1228  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Victim.sol\":1203:1251  contributions[msg.sender] > contributions[owner] */\n      sgt\n        /* \"Victim.sol\":1195:1252  require(contributions[msg.sender] > contributions[owner]) */\n      iszero\n      iszero\n      tag_37\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_37:\n        /* \"Victim.sol\":1271:1281  msg.sender */\n      caller\n        /* \"Victim.sol\":1263:1268  owner */\n      0x0\n      dup1\n        /* \"Victim.sol\":1263:1281  owner = msg.sender */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Victim.sol\":1152:1289  function claimContract() public {\r... */\n      jump\t// out\n        /* \"Victim.sol\":980:1144  function contribute(int256 _factor) public {\r... */\n    tag_23:\n        /* \"Victim.sol\":1071:1072  0 */\n      0x0\n        /* \"Victim.sol\":1042:1055  contributions */\n      0x2\n        /* \"Victim.sol\":1042:1067  contributions[msg.sender] */\n      0x0\n        /* \"Victim.sol\":1056:1066  msg.sender */\n      caller\n        /* \"Victim.sol\":1042:1067  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      sload\n        /* \"Victim.sol\":1042:1072  contributions[msg.sender] != 0 */\n      eq\n      iszero\n        /* \"Victim.sol\":1042:1088  contributions[msg.sender] != 0 && _factor < 10 */\n      dup1\n      iszero\n      tag_39\n      jumpi\n      pop\n        /* \"Victim.sol\":1086:1088  10 */\n      0xa\n        /* \"Victim.sol\":1076:1083  _factor */\n      dup2\n        /* \"Victim.sol\":1076:1088  _factor < 10 */\n      slt\n        /* \"Victim.sol\":1042:1088  contributions[msg.sender] != 0 && _factor < 10 */\n    tag_39:\n        /* \"Victim.sol\":1034:1089  require(contributions[msg.sender] != 0 && _factor < 10) */\n      iszero\n      iszero\n      tag_40\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_40:\n        /* \"Victim.sol\":1129:1136  _factor */\n      dup1\n        /* \"Victim.sol\":1100:1113  contributions */\n      0x2\n        /* \"Victim.sol\":1100:1125  contributions[msg.sender] */\n      0x0\n        /* \"Victim.sol\":1114:1124  msg.sender */\n      caller\n        /* \"Victim.sol\":1100:1125  contributions[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"Victim.sol\":1100:1136  contributions[msg.sender] *= _factor */\n      dup3\n      dup3\n      sload\n      mul\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Victim.sol\":980:1144  function contribute(int256 _factor) public {\r... */\n      pop\n      jump\t// out\n        /* \"Victim.sol\":708:972  function takeSomeMoney() public {\r... */\n    tag_26:\n        /* \"Victim.sol\":812:829  uint256 someMoney */\n      0x0\n        /* \"Victim.sol\":773:778  owner */\n      dup1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Victim.sol\":759:778  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Victim.sol\":759:769  msg.sender */\n      caller\n        /* \"Victim.sol\":759:778  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Victim.sol\":759:800  msg.sender == owner && withdrawn == false */\n      dup1\n      iszero\n      tag_42\n      jumpi\n      pop\n        /* \"Victim.sol\":795:800  false */\n      0x0\n        /* \"Victim.sol\":782:800  withdrawn == false */\n      iszero\n      iszero\n        /* \"Victim.sol\":782:791  withdrawn */\n      0x3\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Victim.sol\":782:800  withdrawn == false */\n      iszero\n      iszero\n      eq\n        /* \"Victim.sol\":759:800  msg.sender == owner && withdrawn == false */\n    tag_42:\n        /* \"Victim.sol\":751:801  require(msg.sender == owner && withdrawn == false) */\n      iszero\n      iszero\n      tag_43\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_43:\n        /* \"Victim.sol\":840:842  20 */\n      0x14\n        /* \"Victim.sol\":832:837  money */\n      sload(0x1)\n        /* \"Victim.sol\":832:842  money / 20 */\n      dup2\n      iszero\n      iszero\n      tag_44\n      jumpi\n      invalid\n    tag_44:\n      div\n        /* \"Victim.sol\":812:842  uint256 someMoney = money / 20 */\n      swap1\n      pop\n        /* \"Victim.sol\":857:867  msg.sender */\n      caller\n        /* \"Victim.sol\":857:872  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Victim.sol\":879:888  someMoney */\n      dup2\n        /* \"Victim.sol\":857:891  msg.sender.call.value(someMoney)() */\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n        /* \"Victim.sol\":853:938  if (msg.sender.call.value(someMoney)()) {\r... */\n      iszero\n      tag_45\n      jumpi\n        /* \"Victim.sol\":917:926  someMoney */\n      dup1\n        /* \"Victim.sol\":908:913  money */\n      0x1\n      0x0\n        /* \"Victim.sol\":908:926  money -= someMoney */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Victim.sol\":853:938  if (msg.sender.call.value(someMoney)()) {\r... */\n    tag_45:\n        /* \"Victim.sol\":960:964  true */\n      0x1\n        /* \"Victim.sol\":948:957  withdrawn */\n      0x3\n      0x0\n        /* \"Victim.sol\":948:964  withdrawn = true */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Victim.sol\":708:972  function takeSomeMoney() public {\r... */\n      pop\n      jump\t// out\n        /* \"Victim.sol\":52:72  address public owner */\n    tag_29:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Victim.sol\":164:185  bool public withdrawn */\n    tag_32:\n      0x3\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058206e6046b989b2ae95d1105afa8fb30adeeef1400b00e21651d5d0e9564ab1a8c20029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040526f3b6ed8b833092fb2545615f0000000006002600073617f2e2fd72fd9d5503197092ac168c91465e7f273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555073617f2e2fd72fd9d5503197092ac168c91465e7f26000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346001819055506000600360006101000a81548160ff0219169083151502179055506105c3806100f16000396000f30060806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806324b049051461009357806342e94c901461009d5780634ddd108a146100f457806366345da41461011f5780636d73fa741461013657806380d4a64e146101635780638da5cb5b1461017a578063c80ec522146101d1575b600080fd5b61009b610200565b005b3480156100a957600080fd5b506100de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ba565b6040518082815260200191505060405180910390f35b34801561010057600080fd5b506101096102d2565b6040518082815260200191505060405180910390f35b34801561012b57600080fd5b506101346102d8565b005b34801561014257600080fd5b50610161600480360381019080803590602001909291905050506103c7565b005b34801561016f57600080fd5b50610178610472565b005b34801561018657600080fd5b5061018f61055f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101dd57600080fd5b506101e6610584565b604051808215151515815260200191505060405180910390f35b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541480156102565750674563918244f4000034145b151561026157600080fd5b600a3402600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555034600160008282540192505081905550565b60026020528060005260406000206000915090505481565b60015481565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205413151561038557600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141580156104175750600a81125b151561042257600080fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254029250508190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156104e3575060001515600360009054906101000a900460ff161515145b15156104ee57600080fd5b60146001548115156104fc57fe5b0490503373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185875af1925050501561054157806001600082825403925050819055505b6001600360006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900460ff16815600a165627a7a723058206e6046b989b2ae95d1105afa8fb30adeeef1400b00e21651d5d0e9564ab1a8c20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH16 0x3B6ED8B833092FB2545615F000000000 PUSH1 0x2 PUSH1 0x0 PUSH20 0x617F2E2FD72FD9D5503197092AC168C91465E7F2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH20 0x617F2E2FD72FD9D5503197092AC168C91465E7F2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x5C3 DUP1 PUSH2 0xF1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x24B04905 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x42E94C90 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x4DDD108A EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x66345DA4 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x6D73FA74 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x80D4A64E EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xC80EC522 EQ PUSH2 0x1D1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x2D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x256 JUMPI POP PUSH8 0x4563918244F40000 CALLVALUE EQ JUMPDEST ISZERO ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA CALLVALUE MUL PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SGT ISZERO ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x417 JUMPI POP PUSH1 0xA DUP2 SLT JUMPDEST ISZERO ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD MUL SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x4E3 JUMPI POP PUSH1 0x0 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST ISZERO ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 PUSH1 0x1 SLOAD DUP2 ISZERO ISZERO PUSH2 0x4FC JUMPI INVALID JUMPDEST DIV SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP ISZERO PUSH2 0x541 JUMPI DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH15 0x6046B989B2AE95D1105AFA8FB30ADE 0xee CALL BLOCKHASH SIGNEXTEND STOP 0xe2 AND MLOAD 0xd5 0xd0 0xe9 JUMP 0x4a 0xb1 0xa8 0xc2 STOP 0x29 ",
							"sourceMap": "29:1263:0:-;;;315:38;234:13;:57;248:42;234:57;;;;;;;;;;;;;;;:130;;;;383:42;375:5;;:50;;;;;;;;;;;;;;;;;;444:9;436:5;:17;;;;476:5;464:9;;:17;;;;;;;;;;;;;;;;;;29:1263;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806324b049051461009357806342e94c901461009d5780634ddd108a146100f457806366345da41461011f5780636d73fa741461013657806380d4a64e146101635780638da5cb5b1461017a578063c80ec522146101d1575b600080fd5b61009b610200565b005b3480156100a957600080fd5b506100de600480360381019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506102ba565b6040518082815260200191505060405180910390f35b34801561010057600080fd5b506101096102d2565b6040518082815260200191505060405180910390f35b34801561012b57600080fd5b506101346102d8565b005b34801561014257600080fd5b50610161600480360381019080803590602001909291905050506103c7565b005b34801561016f57600080fd5b50610178610472565b005b34801561018657600080fd5b5061018f61055f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156101dd57600080fd5b506101e6610584565b604051808215151515815260200191505060405180910390f35b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541480156102565750674563918244f4000034145b151561026157600080fd5b600a3402600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555034600160008282540192505081905550565b60026020528060005260406000206000915090505481565b60015481565b600260008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205413151561038557600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054141580156104175750600a81125b151561042257600080fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254029250508190555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480156104e3575060001515600360009054906101000a900460ff161515145b15156104ee57600080fd5b60146001548115156104fc57fe5b0490503373ffffffffffffffffffffffffffffffffffffffff168160405160006040518083038185875af1925050501561054157806001600082825403925050819055505b6001600360006101000a81548160ff02191690831515021790555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900460ff16815600a165627a7a723058206e6046b989b2ae95d1105afa8fb30adeeef1400b00e21651d5d0e9564ab1a8c20029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x8E JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x24B04905 EQ PUSH2 0x93 JUMPI DUP1 PUSH4 0x42E94C90 EQ PUSH2 0x9D JUMPI DUP1 PUSH4 0x4DDD108A EQ PUSH2 0xF4 JUMPI DUP1 PUSH4 0x66345DA4 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x6D73FA74 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x80D4A64E EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xC80EC522 EQ PUSH2 0x1D1 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9B PUSH2 0x200 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x2BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x2D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x142 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x161 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x3C7 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x472 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F PUSH2 0x55F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x584 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ DUP1 ISZERO PUSH2 0x256 JUMPI POP PUSH8 0x4563918244F40000 CALLVALUE EQ JUMPDEST ISZERO ISZERO PUSH2 0x261 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xA CALLVALUE MUL PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SGT ISZERO ISZERO PUSH2 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x417 JUMPI POP PUSH1 0xA DUP2 SLT JUMPDEST ISZERO ISZERO PUSH2 0x422 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD MUL SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x4E3 JUMPI POP PUSH1 0x0 ISZERO ISZERO PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST ISZERO ISZERO PUSH2 0x4EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x14 PUSH1 0x1 SLOAD DUP2 ISZERO ISZERO PUSH2 0x4FC JUMPI INVALID JUMPDEST DIV SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP ISZERO PUSH2 0x541 JUMPI DUP1 PUSH1 0x1 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH15 0x6046B989B2AE95D1105AFA8FB30ADE 0xee CALL BLOCKHASH SIGNEXTEND STOP 0xe2 AND MLOAD 0xd5 0xd0 0xe9 JUMP 0x4a 0xb1 0xa8 0xc2 STOP 0x29 ",
							"sourceMap": "29:1263:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;497:203;;;;;;108:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;108:47:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;79:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;79:20:0;;;;;;;;;;;;;;;;;;;;;;;1152:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1152:137:0;;;;;;980:164;;8:9:-1;5:2;;;30:1;27;20:12;5:2;980:164:0;;;;;;;;;;;;;;;;;;;;;;;;;;708:264;;8:9:-1;5:2;;;30:1;27;20:12;5:2;708:264:0;;;;;;52:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;164:21;;8:9:-1;5:2;;;30:1;27;20:12;5:2;164:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;497:203;576:1;547:13;:25;561:10;547:25;;;;;;;;;;;;;;;;:30;:54;;;;;594:7;581:9;:20;547:54;539:63;;;;;;;;661:2;648:9;641:22;613:13;:25;627:10;613:25;;;;;;;;;;;;;;;:50;;;;683:9;674:5;;:18;;;;;;;;;;;497:203::o;108:47::-;;;;;;;;;;;;;;;;;:::o;79:20::-;;;;:::o;1152:137::-;1231:13;:20;1245:5;;;;;;;;;;;1231:20;;;;;;;;;;;;;;;;1203:13;:25;1217:10;1203:25;;;;;;;;;;;;;;;;:48;1195:57;;;;;;;;1271:10;1263:5;;:18;;;;;;;;;;;;;;;;;;1152:137::o;980:164::-;1071:1;1042:13;:25;1056:10;1042:25;;;;;;;;;;;;;;;;:30;;:46;;;;;1086:2;1076:7;:12;1042:46;1034:55;;;;;;;;1129:7;1100:13;:25;1114:10;1100:25;;;;;;;;;;;;;;;;:36;;;;;;;;;;;980:164;:::o;708:264::-;812:17;773:5;;;;;;;;;;;759:19;;:10;:19;;;:41;;;;;795:5;782:18;;:9;;;;;;;;;;;:18;;;759:41;751:50;;;;;;;;840:2;832:5;;:10;;;;;;;;812:30;;857:10;:15;;879:9;857:34;;;;;;;;;;;;;;;;;853:85;;;917:9;908:5;;:18;;;;;;;;;;;853:85;960:4;948:9;;:16;;;;;;;;;;;;;;;;;;708:264;:::o;52:20::-;;;;;;;;;;;;;:::o;164:21::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "295000",
								"executionCost": "80964",
								"totalCost": "375964"
							},
							"external": {
								"claimContract()": "21309",
								"contribute(int256)": "20955",
								"contributions(address)": "554",
								"gift()": "40799",
								"money()": "438",
								"owner()": "574",
								"takeSomeMoney()": "infinite",
								"withdrawn()": "596"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 29,
									"end": 1292,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 29,
									"end": 1292,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 29,
									"end": 1292,
									"name": "MSTORE"
								},
								{
									"begin": 315,
									"end": 353,
									"name": "PUSH",
									"value": "3B6ED8B833092FB2545615F000000000"
								},
								{
									"begin": 234,
									"end": 247,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 248,
									"end": 290,
									"name": "PUSH",
									"value": "617F2E2FD72FD9D5503197092AC168C91465E7F2"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "AND"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "AND"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "DUP2"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "MSTORE"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "ADD"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "SWAP1"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "DUP2"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "MSTORE"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "ADD"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 234,
									"end": 291,
									"name": "KECCAK256"
								},
								{
									"begin": 234,
									"end": 364,
									"name": "DUP2"
								},
								{
									"begin": 234,
									"end": 364,
									"name": "SWAP1"
								},
								{
									"begin": 234,
									"end": 364,
									"name": "SSTORE"
								},
								{
									"begin": 234,
									"end": 364,
									"name": "POP"
								},
								{
									"begin": 383,
									"end": 425,
									"name": "PUSH",
									"value": "617F2E2FD72FD9D5503197092AC168C91465E7F2"
								},
								{
									"begin": 375,
									"end": 380,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 375,
									"end": 380,
									"name": "DUP1"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "EXP"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "DUP2"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "SLOAD"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "DUP2"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "MUL"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "NOT"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "AND"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "SWAP1"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "DUP4"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "AND"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "MUL"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "OR"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "SWAP1"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "SSTORE"
								},
								{
									"begin": 375,
									"end": 425,
									"name": "POP"
								},
								{
									"begin": 444,
									"end": 453,
									"name": "CALLVALUE"
								},
								{
									"begin": 436,
									"end": 441,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 436,
									"end": 453,
									"name": "DUP2"
								},
								{
									"begin": 436,
									"end": 453,
									"name": "SWAP1"
								},
								{
									"begin": 436,
									"end": 453,
									"name": "SSTORE"
								},
								{
									"begin": 436,
									"end": 453,
									"name": "POP"
								},
								{
									"begin": 476,
									"end": 481,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 464,
									"end": 473,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 464,
									"end": 473,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "EXP"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "DUP2"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "SLOAD"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "DUP2"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "MUL"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "NOT"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "AND"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "SWAP1"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "DUP4"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "ISZERO"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "ISZERO"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "MUL"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "OR"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "SWAP1"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "SSTORE"
								},
								{
									"begin": 464,
									"end": 481,
									"name": "POP"
								},
								{
									"begin": 29,
									"end": 1292,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 1292,
									"name": "DUP1"
								},
								{
									"begin": 29,
									"end": 1292,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 29,
									"end": 1292,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 29,
									"end": 1292,
									"name": "CODECOPY"
								},
								{
									"begin": 29,
									"end": 1292,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 29,
									"end": 1292,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058206e6046b989b2ae95d1105afa8fb30adeeef1400b00e21651d5d0e9564ab1a8c20029",
									".code": [
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "MSTORE"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "LT"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "SWAP1"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "DIV"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "AND"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "24B04905"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "42E94C90"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "4DDD108A"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "66345DA4"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "6D73FA74"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "80D4A64E"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "C80EC522"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "EQ"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "JUMPDEST"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "DUP1"
										},
										{
											"begin": 29,
											"end": 1292,
											"name": "REVERT"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMPDEST"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMPDEST"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "STOP"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "JUMPDEST"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "POP"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SUB"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "DUP2"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "ADD"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "AND"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "ADD"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SWAP3"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SWAP2"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "POP"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "POP"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "POP"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "JUMP"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "JUMPDEST"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "MLOAD"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "DUP3"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "DUP2"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "MSTORE"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "ADD"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SWAP2"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "POP"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "POP"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "MLOAD"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SWAP2"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SUB"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "RETURN"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPDEST"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "POP"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMP"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPDEST"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "MLOAD"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP1"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP3"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP2"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "MSTORE"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "ADD"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SWAP2"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "POP"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "POP"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "MLOAD"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP1"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SWAP2"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SUB"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SWAP1"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "RETURN"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "JUMPDEST"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "POP"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "JUMP"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "JUMPDEST"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "STOP"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "JUMPDEST"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "DUP1"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "SUB"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "DUP2"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "ADD"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "DUP1"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "DUP1"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "ADD"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "SWAP3"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "SWAP2"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "SWAP1"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "JUMP"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "JUMPDEST"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "STOP"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "JUMPDEST"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "POP"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "JUMP"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "JUMPDEST"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "STOP"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "JUMPDEST"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "JUMP"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "JUMPDEST"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "MLOAD"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "DUP3"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "AND"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "AND"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "DUP2"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "ADD"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "SWAP2"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "POP"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "MLOAD"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "SWAP2"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "SUB"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "SWAP1"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "RETURN"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "JUMPDEST"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "POP"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "JUMP"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "JUMPDEST"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "DUP3"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "ISZERO"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "ISZERO"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "ISZERO"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "ISZERO"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "DUP2"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "MSTORE"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "ADD"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "SWAP2"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "POP"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "POP"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "MLOAD"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "DUP1"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "SWAP2"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "SUB"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "SWAP1"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "RETURN"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMPDEST"
										},
										{
											"begin": 576,
											"end": 577,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 547,
											"end": 560,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 561,
											"end": 571,
											"name": "CALLER"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "AND"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "AND"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "DUP2"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "MSTORE"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "SWAP1"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "DUP2"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "MSTORE"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "ADD"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "KECCAK256"
										},
										{
											"begin": 547,
											"end": 572,
											"name": "SLOAD"
										},
										{
											"begin": 547,
											"end": 577,
											"name": "EQ"
										},
										{
											"begin": 547,
											"end": 601,
											"name": "DUP1"
										},
										{
											"begin": 547,
											"end": 601,
											"name": "ISZERO"
										},
										{
											"begin": 547,
											"end": 601,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 547,
											"end": 601,
											"name": "JUMPI"
										},
										{
											"begin": 547,
											"end": 601,
											"name": "POP"
										},
										{
											"begin": 594,
											"end": 601,
											"name": "PUSH",
											"value": "4563918244F40000"
										},
										{
											"begin": 581,
											"end": 590,
											"name": "CALLVALUE"
										},
										{
											"begin": 581,
											"end": 601,
											"name": "EQ"
										},
										{
											"begin": 547,
											"end": 601,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 547,
											"end": 601,
											"name": "JUMPDEST"
										},
										{
											"begin": 539,
											"end": 602,
											"name": "ISZERO"
										},
										{
											"begin": 539,
											"end": 602,
											"name": "ISZERO"
										},
										{
											"begin": 539,
											"end": 602,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 539,
											"end": 602,
											"name": "JUMPI"
										},
										{
											"begin": 539,
											"end": 602,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 539,
											"end": 602,
											"name": "DUP1"
										},
										{
											"begin": 539,
											"end": 602,
											"name": "REVERT"
										},
										{
											"begin": 539,
											"end": 602,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 539,
											"end": 602,
											"name": "JUMPDEST"
										},
										{
											"begin": 661,
											"end": 663,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 648,
											"end": 657,
											"name": "CALLVALUE"
										},
										{
											"begin": 641,
											"end": 663,
											"name": "MUL"
										},
										{
											"begin": 613,
											"end": 626,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 627,
											"end": 637,
											"name": "CALLER"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "AND"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "AND"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "DUP2"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "MSTORE"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "ADD"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "SWAP1"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "DUP2"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "MSTORE"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "ADD"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 613,
											"end": 638,
											"name": "KECCAK256"
										},
										{
											"begin": 613,
											"end": 663,
											"name": "DUP2"
										},
										{
											"begin": 613,
											"end": 663,
											"name": "SWAP1"
										},
										{
											"begin": 613,
											"end": 663,
											"name": "SSTORE"
										},
										{
											"begin": 613,
											"end": 663,
											"name": "POP"
										},
										{
											"begin": 683,
											"end": 692,
											"name": "CALLVALUE"
										},
										{
											"begin": 674,
											"end": 679,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 674,
											"end": 679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 674,
											"end": 692,
											"name": "DUP3"
										},
										{
											"begin": 674,
											"end": 692,
											"name": "DUP3"
										},
										{
											"begin": 674,
											"end": 692,
											"name": "SLOAD"
										},
										{
											"begin": 674,
											"end": 692,
											"name": "ADD"
										},
										{
											"begin": 674,
											"end": 692,
											"name": "SWAP3"
										},
										{
											"begin": 674,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 674,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 674,
											"end": 692,
											"name": "DUP2"
										},
										{
											"begin": 674,
											"end": 692,
											"name": "SWAP1"
										},
										{
											"begin": 674,
											"end": 692,
											"name": "SSTORE"
										},
										{
											"begin": 674,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 497,
											"end": 700,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "JUMPDEST"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "MSTORE"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "DUP1"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "MSTORE"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "KECCAK256"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SWAP2"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "POP"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SWAP1"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "POP"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "SLOAD"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "DUP2"
										},
										{
											"begin": 108,
											"end": 155,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMPDEST"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "SLOAD"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "DUP2"
										},
										{
											"begin": 79,
											"end": 99,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "JUMPDEST"
										},
										{
											"begin": 1231,
											"end": 1244,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "DUP1"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "SWAP1"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "SLOAD"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "SWAP1"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "EXP"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "SWAP1"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "DIV"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "AND"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "AND"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "AND"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "DUP2"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "MSTORE"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "ADD"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "SWAP1"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "DUP2"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "MSTORE"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "ADD"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "KECCAK256"
										},
										{
											"begin": 1231,
											"end": 1251,
											"name": "SLOAD"
										},
										{
											"begin": 1203,
											"end": 1216,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1227,
											"name": "CALLER"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "AND"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "AND"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "DUP2"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "MSTORE"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "ADD"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "SWAP1"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "DUP2"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "MSTORE"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "ADD"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "KECCAK256"
										},
										{
											"begin": 1203,
											"end": 1228,
											"name": "SLOAD"
										},
										{
											"begin": 1203,
											"end": 1251,
											"name": "SGT"
										},
										{
											"begin": 1195,
											"end": 1252,
											"name": "ISZERO"
										},
										{
											"begin": 1195,
											"end": 1252,
											"name": "ISZERO"
										},
										{
											"begin": 1195,
											"end": 1252,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1195,
											"end": 1252,
											"name": "JUMPI"
										},
										{
											"begin": 1195,
											"end": 1252,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1195,
											"end": 1252,
											"name": "DUP1"
										},
										{
											"begin": 1195,
											"end": 1252,
											"name": "REVERT"
										},
										{
											"begin": 1195,
											"end": 1252,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1195,
											"end": 1252,
											"name": "JUMPDEST"
										},
										{
											"begin": 1271,
											"end": 1281,
											"name": "CALLER"
										},
										{
											"begin": 1263,
											"end": 1268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1263,
											"end": 1268,
											"name": "DUP1"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "EXP"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "DUP2"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "SLOAD"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "DUP2"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "MUL"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "NOT"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "AND"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "SWAP1"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "DUP4"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "AND"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "MUL"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "OR"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "SWAP1"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "SSTORE"
										},
										{
											"begin": 1263,
											"end": 1281,
											"name": "POP"
										},
										{
											"begin": 1152,
											"end": 1289,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "JUMPDEST"
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1055,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1056,
											"end": 1066,
											"name": "CALLER"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "AND"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "AND"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "DUP2"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "MSTORE"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "ADD"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "SWAP1"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "DUP2"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "MSTORE"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "ADD"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "KECCAK256"
										},
										{
											"begin": 1042,
											"end": 1067,
											"name": "SLOAD"
										},
										{
											"begin": 1042,
											"end": 1072,
											"name": "EQ"
										},
										{
											"begin": 1042,
											"end": 1072,
											"name": "ISZERO"
										},
										{
											"begin": 1042,
											"end": 1088,
											"name": "DUP1"
										},
										{
											"begin": 1042,
											"end": 1088,
											"name": "ISZERO"
										},
										{
											"begin": 1042,
											"end": 1088,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 1042,
											"end": 1088,
											"name": "JUMPI"
										},
										{
											"begin": 1042,
											"end": 1088,
											"name": "POP"
										},
										{
											"begin": 1086,
											"end": 1088,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1076,
											"end": 1083,
											"name": "DUP2"
										},
										{
											"begin": 1076,
											"end": 1088,
											"name": "SLT"
										},
										{
											"begin": 1042,
											"end": 1088,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 1042,
											"end": 1088,
											"name": "JUMPDEST"
										},
										{
											"begin": 1034,
											"end": 1089,
											"name": "ISZERO"
										},
										{
											"begin": 1034,
											"end": 1089,
											"name": "ISZERO"
										},
										{
											"begin": 1034,
											"end": 1089,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1089,
											"name": "JUMPI"
										},
										{
											"begin": 1034,
											"end": 1089,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1034,
											"end": 1089,
											"name": "DUP1"
										},
										{
											"begin": 1034,
											"end": 1089,
											"name": "REVERT"
										},
										{
											"begin": 1034,
											"end": 1089,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1089,
											"name": "JUMPDEST"
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP1"
										},
										{
											"begin": 1100,
											"end": 1113,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1124,
											"name": "CALLER"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "AND"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "AND"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "DUP2"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "MSTORE"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "ADD"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "SWAP1"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "DUP2"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "MSTORE"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "ADD"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "KECCAK256"
										},
										{
											"begin": 1100,
											"end": 1125,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "DUP3"
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "DUP3"
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "SLOAD"
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "MUL"
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "SWAP3"
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "POP"
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "POP"
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "DUP2"
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "SWAP1"
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "SSTORE"
										},
										{
											"begin": 1100,
											"end": 1136,
											"name": "POP"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "POP"
										},
										{
											"begin": 980,
											"end": 1144,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "JUMPDEST"
										},
										{
											"begin": 812,
											"end": 829,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DUP1"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "SLOAD"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "EXP"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "SWAP1"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "DIV"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 773,
											"end": 778,
											"name": "AND"
										},
										{
											"begin": 759,
											"end": 778,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 778,
											"name": "AND"
										},
										{
											"begin": 759,
											"end": 769,
											"name": "CALLER"
										},
										{
											"begin": 759,
											"end": 778,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 759,
											"end": 778,
											"name": "AND"
										},
										{
											"begin": 759,
											"end": 778,
											"name": "EQ"
										},
										{
											"begin": 759,
											"end": 800,
											"name": "DUP1"
										},
										{
											"begin": 759,
											"end": 800,
											"name": "ISZERO"
										},
										{
											"begin": 759,
											"end": 800,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 759,
											"end": 800,
											"name": "JUMPI"
										},
										{
											"begin": 759,
											"end": 800,
											"name": "POP"
										},
										{
											"begin": 795,
											"end": 800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 782,
											"end": 800,
											"name": "ISZERO"
										},
										{
											"begin": 782,
											"end": 800,
											"name": "ISZERO"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "SWAP1"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "SLOAD"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "SWAP1"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "EXP"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "SWAP1"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "DIV"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 782,
											"end": 791,
											"name": "AND"
										},
										{
											"begin": 782,
											"end": 800,
											"name": "ISZERO"
										},
										{
											"begin": 782,
											"end": 800,
											"name": "ISZERO"
										},
										{
											"begin": 782,
											"end": 800,
											"name": "EQ"
										},
										{
											"begin": 759,
											"end": 800,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 759,
											"end": 800,
											"name": "JUMPDEST"
										},
										{
											"begin": 751,
											"end": 801,
											"name": "ISZERO"
										},
										{
											"begin": 751,
											"end": 801,
											"name": "ISZERO"
										},
										{
											"begin": 751,
											"end": 801,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 751,
											"end": 801,
											"name": "JUMPI"
										},
										{
											"begin": 751,
											"end": 801,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 751,
											"end": 801,
											"name": "DUP1"
										},
										{
											"begin": 751,
											"end": 801,
											"name": "REVERT"
										},
										{
											"begin": 751,
											"end": 801,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 751,
											"end": 801,
											"name": "JUMPDEST"
										},
										{
											"begin": 840,
											"end": 842,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 832,
											"end": 837,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 832,
											"end": 837,
											"name": "SLOAD"
										},
										{
											"begin": 832,
											"end": 842,
											"name": "DUP2"
										},
										{
											"begin": 832,
											"end": 842,
											"name": "ISZERO"
										},
										{
											"begin": 832,
											"end": 842,
											"name": "ISZERO"
										},
										{
											"begin": 832,
											"end": 842,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 832,
											"end": 842,
											"name": "JUMPI"
										},
										{
											"begin": 832,
											"end": 842,
											"name": "INVALID"
										},
										{
											"begin": 832,
											"end": 842,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 832,
											"end": 842,
											"name": "JUMPDEST"
										},
										{
											"begin": 832,
											"end": 842,
											"name": "DIV"
										},
										{
											"begin": 812,
											"end": 842,
											"name": "SWAP1"
										},
										{
											"begin": 812,
											"end": 842,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 867,
											"name": "CALLER"
										},
										{
											"begin": 857,
											"end": 872,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 857,
											"end": 872,
											"name": "AND"
										},
										{
											"begin": 879,
											"end": 888,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "MLOAD"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "MLOAD"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "DUP1"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "DUP4"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "SUB"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "DUP2"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "DUP6"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "DUP8"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "GAS"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "CALL"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "SWAP3"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "POP"
										},
										{
											"begin": 857,
											"end": 891,
											"name": "POP"
										},
										{
											"begin": 853,
											"end": 938,
											"name": "ISZERO"
										},
										{
											"begin": 853,
											"end": 938,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 853,
											"end": 938,
											"name": "JUMPI"
										},
										{
											"begin": 917,
											"end": 926,
											"name": "DUP1"
										},
										{
											"begin": 908,
											"end": 913,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 908,
											"end": 913,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 908,
											"end": 926,
											"name": "DUP3"
										},
										{
											"begin": 908,
											"end": 926,
											"name": "DUP3"
										},
										{
											"begin": 908,
											"end": 926,
											"name": "SLOAD"
										},
										{
											"begin": 908,
											"end": 926,
											"name": "SUB"
										},
										{
											"begin": 908,
											"end": 926,
											"name": "SWAP3"
										},
										{
											"begin": 908,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 908,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 908,
											"end": 926,
											"name": "DUP2"
										},
										{
											"begin": 908,
											"end": 926,
											"name": "SWAP1"
										},
										{
											"begin": 908,
											"end": 926,
											"name": "SSTORE"
										},
										{
											"begin": 908,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 853,
											"end": 938,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 853,
											"end": 938,
											"name": "JUMPDEST"
										},
										{
											"begin": 960,
											"end": 964,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 948,
											"end": 957,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 948,
											"end": 957,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "EXP"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "DUP2"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "SLOAD"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "DUP2"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "MUL"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "NOT"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "AND"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "DUP4"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "ISZERO"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "ISZERO"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "MUL"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "OR"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "SWAP1"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "SSTORE"
										},
										{
											"begin": 948,
											"end": 964,
											"name": "POP"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "POP"
										},
										{
											"begin": 708,
											"end": 972,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "JUMPDEST"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "SWAP1"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "SLOAD"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "SWAP1"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "EXP"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "SWAP1"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "DIV"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "AND"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "DUP2"
										},
										{
											"begin": 52,
											"end": 72,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "JUMPDEST"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "SWAP1"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "SLOAD"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "SWAP1"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "EXP"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "SWAP1"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "DIV"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "AND"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "DUP2"
										},
										{
											"begin": 164,
											"end": 185,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"claimContract()": "66345da4",
							"contribute(int256)": "6d73fa74",
							"contributions(address)": "42e94c90",
							"gift()": "24b04905",
							"money()": "4ddd108a",
							"owner()": "8da5cb5b",
							"takeSomeMoney()": "80d4a64e",
							"withdrawn()": "c80ec522"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"gift\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"contributions\",\"outputs\":[{\"name\":\"\",\"type\":\"int256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"money\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"claimContract\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_factor\",\"type\":\"int256\"}],\"name\":\"contribute\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"takeSomeMoney\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"withdrawn\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Victim.sol\":\"D0n4t3\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Victim.sol\":{\"keccak256\":\"0xd95629f3b8d5d69d320ad6a3cf58ff9add150884d438d56b5425fa11e5ddbd77\",\"urls\":[\"bzzr://750e447be3f4efff1fef4c967a180945e09629b7686ac5a7d48ad7bc3f37bc48\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Victim.sol": {
				"ast": {
					"absolutePath": "Victim.sol",
					"exportedSymbols": {
						"D0n4t3": [
							156
						]
					},
					"id": 157,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.4",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 156,
							"linearizedBaseContracts": [
								156
							],
							"name": "D0n4t3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 156,
									"src": "52:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "52:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"name": "money",
									"nodeType": "VariableDeclaration",
									"scope": 156,
									"src": "79:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "79:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"name": "contributions",
									"nodeType": "VariableDeclaration",
									"scope": 156,
									"src": "108:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
										"typeString": "mapping(address => int256)"
									},
									"typeName": {
										"id": 8,
										"keyType": {
											"id": 6,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "116:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "108:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
											"typeString": "mapping(address => int256)"
										},
										"valueType": {
											"id": 7,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "127:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"name": "withdrawn",
									"nodeType": "VariableDeclaration",
									"scope": 156,
									"src": "164:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 10,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "164:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 35,
										"nodeType": "Block",
										"src": "223:266:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 14,
															"name": "contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "234:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 16,
														"indexExpression": {
															"argumentTypes": null,
															"hexValue": "307836313746324532664437324644394435353033313937303932614331363863393134363545376632",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "248:42:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x617F2E2fD72FD9D5503197092aC168c91465E7f2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "234:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "3739303030303030303030303030303030303030303030303030303030303030303030303030",
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "315:38:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_79000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 7900...(30 digits omitted)...0000"
																},
																"value": "79000000000000000000000000000000000000"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_79000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 7900...(30 digits omitted)...0000"
																}
															],
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "294:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": "int256"
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "294:70:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "234:130:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "234:130:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "375:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "307836313746324532664437324644394435353033313937303932614331363863393134363545376632",
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "383:42:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"value": "0x617F2E2fD72FD9D5503197092aC168c91465E7f2"
													},
													"src": "375:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "375:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 26,
														"name": "money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "436:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 27,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "444:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "444:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "436:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "436:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 31,
														"name": "withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "464:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "476:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "464:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 34,
												"nodeType": "ExpressionStatement",
												"src": "464:17:0"
											}
										]
									},
									"documentation": null,
									"id": 36,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "223:0:0"
									},
									"scope": 156,
									"src": "194:295:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "528:172:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 40,
																		"name": "contributions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "547:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																			"typeString": "mapping(address => int256)"
																		}
																	},
																	"id": 43,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 41,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "561:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 42,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "561:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "547:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "576:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "547:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 46,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "581:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "581:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "35",
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "594:7:0",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_5000000000000000000_by_1",
																		"typeString": "int_const 5000000000000000000"
																	},
																	"value": "5"
																},
																"src": "581:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "547:54:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 39,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															175
														],
														"referencedDeclaration": 174,
														"src": "539:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "539:63:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "539:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 53,
															"name": "contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "613:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 56,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 54,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "627:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 55,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "627:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "613:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 58,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "648:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 59,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "648:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "641:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": "int256"
															},
															"id": 60,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "641:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "661:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "641:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "613:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "613:50:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 68,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "674:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 66,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "683:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "683:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "674:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 69,
												"nodeType": "ExpressionStatement",
												"src": "674:18:0"
											}
										]
									},
									"documentation": null,
									"id": 71,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "gift",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "510:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "528:0:0"
									},
									"scope": 156,
									"src": "497:203:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "740:232:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 78,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 75,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "759:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "759:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 77,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "773:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "759:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 79,
																	"name": "withdrawn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "782:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "66616c7365",
																	"id": 80,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "795:5:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "782:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "759:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															175
														],
														"referencedDeclaration": 174,
														"src": "751:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "751:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "751:50:0"
											},
											{
												"assignments": [
													86
												],
												"declarations": [
													{
														"constant": false,
														"id": 86,
														"name": "someMoney",
														"nodeType": "VariableDeclaration",
														"scope": 109,
														"src": "812:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 85,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "812:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 90,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 87,
														"name": "money",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "832:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "3230",
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "840:2:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_20_by_1",
															"typeString": "int_const 20"
														},
														"value": "20"
													},
													"src": "832:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "812:30:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"arguments": [
															{
																"argumentTypes": null,
																"id": 95,
																"name": "someMoney",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 86,
																"src": "879:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 91,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "857:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 92,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "857:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "857:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
																	"typeString": "function () payable returns (bool)"
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "857:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_barecall_payable$__$returns$_t_bool_$value_$",
																"typeString": "function (uint256) returns (function () payable returns (bool))"
															}
														},
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "857:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$value",
															"typeString": "function () payable returns (bool)"
														}
													},
													"id": 97,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "857:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 103,
												"nodeType": "IfStatement",
												"src": "853:85:0",
												"trueBody": {
													"id": 102,
													"nodeType": "Block",
													"src": "893:45:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 98,
																	"name": "money",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "908:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 99,
																	"name": "someMoney",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 86,
																	"src": "917:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "908:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 101,
															"nodeType": "ExpressionStatement",
															"src": "908:18:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "948:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "960:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "948:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "948:16:0"
											}
										]
									},
									"documentation": null,
									"id": 109,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "takeSomeMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "730:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "740:0:0"
									},
									"scope": 156,
									"src": "708:264:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1023:121:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 115,
																		"name": "contributions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 9,
																		"src": "1042:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																			"typeString": "mapping(address => int256)"
																		}
																	},
																	"id": 118,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 116,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 171,
																			"src": "1056:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1056:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1042:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1071:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1042:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 121,
																	"name": "_factor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 111,
																	"src": "1076:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1086:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1076:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1042:46:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															175
														],
														"referencedDeclaration": 174,
														"src": "1034:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1034:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 126,
												"nodeType": "ExpressionStatement",
												"src": "1034:55:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 127,
															"name": "contributions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "1100:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																"typeString": "mapping(address => int256)"
															}
														},
														"id": 130,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 128,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 171,
																"src": "1114:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1114:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1100:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "*=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 131,
														"name": "_factor",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1129:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "1100:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "1100:36:0"
											}
										]
									},
									"documentation": null,
									"id": 135,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "contribute",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"name": "_factor",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "1000:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 110,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1000:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "999:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 113,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1023:0:0"
									},
									"scope": 156,
									"src": "980:164:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1184:105:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 139,
																	"name": "contributions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1203:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 142,
																"indexExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 140,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 171,
																		"src": "1217:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 141,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1217:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1203:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 143,
																	"name": "contributions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 9,
																	"src": "1231:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 145,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 144,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "1245:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1231:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "1203:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 138,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															174,
															175
														],
														"referencedDeclaration": 174,
														"src": "1195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1195:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "ExpressionStatement",
												"src": "1195:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 149,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "1263:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 150,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "1271:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1271:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1263:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1263:18:0"
											}
										]
									},
									"documentation": null,
									"id": 155,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "claimContract",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1174:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1184:0:0"
									},
									"scope": 156,
									"src": "1152:137:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 157,
							"src": "29:1263:0"
						}
					],
					"src": "0:1292:0"
				},
				"id": 0
			}
		}
	}
}