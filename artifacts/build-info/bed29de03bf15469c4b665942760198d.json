{
	"id": "bed29de03bf15469c4b665942760198d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.25",
	"solcLongVersion": "0.4.25+commit.59dbf8f1",
	"input": {
		"language": "Solidity",
		"sources": {
			"lab4.sol": {
				"content": "pragma solidity =0.4.25;\n\ncontract Logic {\n    address public owner;\n    bytes32 private passphrase = \"th3 fl4g 1s n0t h3r3\";\n\n    constructor() public payable {\n        owner = msg.sender;\n    }\n\n    function withdraw() public {\n        require(msg.sender == owner);\n        msg.sender.call.value(address(this).balance)();\n    }\n\n    function claim(bytes32 _secret) public payable {\n        require(msg.value == 0.05 ether && _secret == passphrase);\n        owner = msg.sender;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"lab4.sol": {
				"Logic": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "_secret",
									"type": "bytes32"
								}
							],
							"name": "claim",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"lab4.sol\":26:486  contract Logic {... */\n  mstore(0x40, 0x80)\n    /* \"lab4.sol\":73:124  bytes32 private passphrase = \"th3 fl4g 1s n0t h3r3\" */\n  0x74683320666c3467203173206e30742068337233000000000000000000000000\n  0x1\n  swap1\n  not(0x0)\n  and\n  swap1\n  sstore\n    /* \"lab4.sol\":178:188  msg.sender */\n  caller\n    /* \"lab4.sol\":170:175  owner */\n  0x0\n  dup1\n    /* \"lab4.sol\":170:188  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"lab4.sol\":26:486  contract Logic {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"lab4.sol\":26:486  contract Logic {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbd66528a\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"lab4.sol\":201:329  function withdraw() public {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_5\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_5:\n        /* \"lab4.sol\":201:329  function withdraw() public {... */\n      pop\n      tag_6\n      jump(tag_7)\n    tag_6:\n      stop\n        /* \"lab4.sol\":47:67  address public owner */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"lab4.sol\":47:67  address public owner */\n      pop\n      tag_9\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"lab4.sol\":335:484  function claim(bytes32 _secret) public payable {... */\n    tag_4:\n      tag_11\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0x0)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_12)\n    tag_11:\n      stop\n        /* \"lab4.sol\":201:329  function withdraw() public {... */\n    tag_7:\n        /* \"lab4.sol\":260:265  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lab4.sol\":246:265  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lab4.sol\":246:256  msg.sender */\n      caller\n        /* \"lab4.sol\":246:265  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"lab4.sol\":238:266  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_14\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_14:\n        /* \"lab4.sol\":276:286  msg.sender */\n      caller\n        /* \"lab4.sol\":276:291  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"lab4.sol\":306:310  this */\n      address\n        /* \"lab4.sol\":298:319  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"lab4.sol\":276:322  msg.sender.call.value(address(this).balance)() */\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      pop\n        /* \"lab4.sol\":201:329  function withdraw() public {... */\n      jump\t// out\n        /* \"lab4.sol\":47:67  address public owner */\n    tag_10:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"lab4.sol\":335:484  function claim(bytes32 _secret) public payable {... */\n    tag_12:\n        /* \"lab4.sol\":413:423  0.05 ether */\n      0xb1a2bc2ec50000\n        /* \"lab4.sol\":400:409  msg.value */\n      callvalue\n        /* \"lab4.sol\":400:423  msg.value == 0.05 ether */\n      eq\n        /* \"lab4.sol\":400:448  msg.value == 0.05 ether && _secret == passphrase */\n      dup1\n      iszero\n      tag_16\n      jumpi\n      pop\n        /* \"lab4.sol\":438:448  passphrase */\n      sload(0x1)\n        /* \"lab4.sol\":427:448  _secret == passphrase */\n      not(0x0)\n      and\n        /* \"lab4.sol\":427:434  _secret */\n      dup2\n        /* \"lab4.sol\":427:448  _secret == passphrase */\n      not(0x0)\n      and\n      eq\n        /* \"lab4.sol\":400:448  msg.value == 0.05 ether && _secret == passphrase */\n    tag_16:\n        /* \"lab4.sol\":392:449  require(msg.value == 0.05 ether && _secret == passphrase) */\n      iszero\n      iszero\n      tag_17\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_17:\n        /* \"lab4.sol\":467:477  msg.sender */\n      caller\n        /* \"lab4.sol\":459:464  owner */\n      0x0\n      dup1\n        /* \"lab4.sol\":459:477  owner = msg.sender */\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"lab4.sol\":335:484  function claim(bytes32 _secret) public payable {... */\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a723058207f4dc2b85bde1bb67f714ba86049ba3a517e89bb192c3da5a068ef3c0bf853110029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60806040527f74683320666c3467203173206e30742068337233000000000000000000000000600190600019169055336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061024d8061007d6000396000f300608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633ccfd60b1461005c5780638da5cb5b14610073578063bd66528a146100ca575b600080fd5b34801561006857600080fd5b506100716100ee565b005b34801561007f57600080fd5b5061008861018f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100ec60048036038101908080356000191690602001909291905050506101b4565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561014957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff163160405160006040518083038185875af19250505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b66b1a2bc2ec50000341480156101d35750600154600019168160001916145b15156101de57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058207f4dc2b85bde1bb67f714ba86049ba3a517e89bb192c3da5a068ef3c0bf853110029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH32 0x74683320666C3467203173206E30742068337233000000000000000000000000 PUSH1 0x1 SWAP1 PUSH1 0x0 NOT AND SWAP1 SSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x24D DUP1 PUSH2 0x7D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xBD66528A EQ PUSH2 0xCA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x88 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH7 0xB1A2BC2EC50000 CALLVALUE EQ DUP1 ISZERO PUSH2 0x1D3 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x0 NOT AND DUP2 PUSH1 0x0 NOT AND EQ JUMPDEST ISZERO ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH32 0x4DC2B85BDE1BB67F714BA86049BA3A517E89BB192C3DA5A068EF3C0BF8531100 0x29 ",
							"sourceMap": "26:460:0:-;;;73:51;;;;;;;;178:10;170:5;;:18;;;;;;;;;;;;;;;;;;26:460;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610057576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633ccfd60b1461005c5780638da5cb5b14610073578063bd66528a146100ca575b600080fd5b34801561006857600080fd5b506100716100ee565b005b34801561007f57600080fd5b5061008861018f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100ec60048036038101908080356000191690602001909291905050506101b4565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561014957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff163073ffffffffffffffffffffffffffffffffffffffff163160405160006040518083038185875af19250505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b66b1a2bc2ec50000341480156101d35750600154600019168160001916145b15156101de57600080fd5b336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505600a165627a7a723058207f4dc2b85bde1bb67f714ba86049ba3a517e89bb192c3da5a068ef3c0bf853110029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x73 JUMPI DUP1 PUSH4 0xBD66528A EQ PUSH2 0xCA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x71 PUSH2 0xEE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x88 PUSH2 0x18F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x1B4 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x149 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH7 0xB1A2BC2EC50000 CALLVALUE EQ DUP1 ISZERO PUSH2 0x1D3 JUMPI POP PUSH1 0x1 SLOAD PUSH1 0x0 NOT AND DUP2 PUSH1 0x0 NOT AND EQ JUMPDEST ISZERO ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 PUSH32 0x4DC2B85BDE1BB67F714BA86049BA3A517E89BB192C3DA5A068EF3C0BF8531100 0x29 ",
							"sourceMap": "26:460:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;201:128;;8:9:-1;5:2;;;30:1;27;20:12;5:2;201:128:0;;;;;;47:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;47:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;335:149;;;;;;;;;;;;;;;;;;;;;;;;;;;;;201:128;260:5;;;;;;;;;;;246:19;;:10;:19;;;238:28;;;;;;;;276:10;:15;;306:4;298:21;;;276:46;;;;;;;;;;;;;;;;;;201:128::o;47:20::-;;;;;;;;;;;;;:::o;335:149::-;413:10;400:9;:23;:48;;;;;438:10;;427:21;;;:7;:21;;;;400:48;392:57;;;;;;;;467:10;459:5;;:18;;;;;;;;;;;;;;;;;;335:149;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "117800",
								"executionCost": "40428",
								"totalCost": "158228"
							},
							"external": {
								"claim(bytes32)": "20763",
								"owner()": "464",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 486,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 26,
									"end": 486,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 26,
									"end": 486,
									"name": "MSTORE"
								},
								{
									"begin": 73,
									"end": 124,
									"name": "PUSH",
									"value": "74683320666C3467203173206E30742068337233000000000000000000000000"
								},
								{
									"begin": 73,
									"end": 124,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 73,
									"end": 124,
									"name": "SWAP1"
								},
								{
									"begin": 73,
									"end": 124,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 73,
									"end": 124,
									"name": "NOT"
								},
								{
									"begin": 73,
									"end": 124,
									"name": "AND"
								},
								{
									"begin": 73,
									"end": 124,
									"name": "SWAP1"
								},
								{
									"begin": 73,
									"end": 124,
									"name": "SSTORE"
								},
								{
									"begin": 178,
									"end": 188,
									"name": "CALLER"
								},
								{
									"begin": 170,
									"end": 175,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 170,
									"end": 175,
									"name": "DUP1"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "EXP"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "DUP2"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "SLOAD"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "DUP2"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "MUL"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "NOT"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "AND"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "SWAP1"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "DUP4"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "AND"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "MUL"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "OR"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "SWAP1"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "SSTORE"
								},
								{
									"begin": 170,
									"end": 188,
									"name": "POP"
								},
								{
									"begin": 26,
									"end": 486,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 486,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 486,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 486,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 486,
									"name": "CODECOPY"
								},
								{
									"begin": 26,
									"end": 486,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 486,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a723058207f4dc2b85bde1bb67f714ba86049ba3a517e89bb192c3da5a068ef3c0bf853110029",
									".code": [
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "LT"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "SWAP1"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "DIV"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "AND"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH",
											"value": "BD66528A"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 486,
											"name": "REVERT"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "JUMPDEST"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "POP"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "JUMP"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "JUMPDEST"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "STOP"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "JUMPDEST"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "POP"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "JUMP"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "JUMPDEST"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "MLOAD"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP3"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "AND"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "AND"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP2"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "MSTORE"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "ADD"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SWAP2"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "POP"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "POP"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "MLOAD"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SWAP2"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SUB"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SWAP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "RETURN"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "JUMPDEST"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "DUP1"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "SUB"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "DUP2"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "ADD"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "DUP1"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "DUP1"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "NOT"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "AND"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "ADD"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "SWAP3"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "SWAP2"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "SWAP1"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "JUMP"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "JUMPDEST"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "STOP"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "JUMPDEST"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "DUP1"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "SWAP1"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "SLOAD"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "SWAP1"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "EXP"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "SWAP1"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "DIV"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 260,
											"end": 265,
											"name": "AND"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "AND"
										},
										{
											"begin": 246,
											"end": 256,
											"name": "CALLER"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "AND"
										},
										{
											"begin": 246,
											"end": 265,
											"name": "EQ"
										},
										{
											"begin": 238,
											"end": 266,
											"name": "ISZERO"
										},
										{
											"begin": 238,
											"end": 266,
											"name": "ISZERO"
										},
										{
											"begin": 238,
											"end": 266,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 238,
											"end": 266,
											"name": "JUMPI"
										},
										{
											"begin": 238,
											"end": 266,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 238,
											"end": 266,
											"name": "DUP1"
										},
										{
											"begin": 238,
											"end": 266,
											"name": "REVERT"
										},
										{
											"begin": 238,
											"end": 266,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 238,
											"end": 266,
											"name": "JUMPDEST"
										},
										{
											"begin": 276,
											"end": 286,
											"name": "CALLER"
										},
										{
											"begin": 276,
											"end": 291,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 276,
											"end": 291,
											"name": "AND"
										},
										{
											"begin": 306,
											"end": 310,
											"name": "ADDRESS"
										},
										{
											"begin": 298,
											"end": 319,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 298,
											"end": 319,
											"name": "AND"
										},
										{
											"begin": 298,
											"end": 319,
											"name": "BALANCE"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "MLOAD"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "MLOAD"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "DUP1"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "DUP4"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "SUB"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "DUP2"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "DUP6"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "DUP8"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "GAS"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "CALL"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "SWAP3"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "POP"
										},
										{
											"begin": 276,
											"end": 322,
											"name": "POP"
										},
										{
											"begin": 201,
											"end": 329,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "JUMPDEST"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SWAP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SLOAD"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SWAP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "EXP"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SWAP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DIV"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "AND"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP2"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "JUMPDEST"
										},
										{
											"begin": 413,
											"end": 423,
											"name": "PUSH",
											"value": "B1A2BC2EC50000"
										},
										{
											"begin": 400,
											"end": 409,
											"name": "CALLVALUE"
										},
										{
											"begin": 400,
											"end": 423,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 448,
											"name": "DUP1"
										},
										{
											"begin": 400,
											"end": 448,
											"name": "ISZERO"
										},
										{
											"begin": 400,
											"end": 448,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 400,
											"end": 448,
											"name": "JUMPI"
										},
										{
											"begin": 400,
											"end": 448,
											"name": "POP"
										},
										{
											"begin": 438,
											"end": 448,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 438,
											"end": 448,
											"name": "SLOAD"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "NOT"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "AND"
										},
										{
											"begin": 427,
											"end": 434,
											"name": "DUP2"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "NOT"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "AND"
										},
										{
											"begin": 427,
											"end": 448,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 448,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 400,
											"end": 448,
											"name": "JUMPDEST"
										},
										{
											"begin": 392,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 392,
											"end": 449,
											"name": "ISZERO"
										},
										{
											"begin": 392,
											"end": 449,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 392,
											"end": 449,
											"name": "JUMPI"
										},
										{
											"begin": 392,
											"end": 449,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 392,
											"end": 449,
											"name": "DUP1"
										},
										{
											"begin": 392,
											"end": 449,
											"name": "REVERT"
										},
										{
											"begin": 392,
											"end": 449,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 392,
											"end": 449,
											"name": "JUMPDEST"
										},
										{
											"begin": 467,
											"end": 477,
											"name": "CALLER"
										},
										{
											"begin": 459,
											"end": 464,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 459,
											"end": 464,
											"name": "DUP1"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "EXP"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "SLOAD"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "DUP2"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "MUL"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "NOT"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "AND"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "DUP4"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "AND"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "MUL"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "OR"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "SWAP1"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "SSTORE"
										},
										{
											"begin": 459,
											"end": 477,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "POP"
										},
										{
											"begin": 335,
											"end": 484,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"claim(bytes32)": "bd66528a",
							"owner()": "8da5cb5b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.25+commit.59dbf8f1\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_secret\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"lab4.sol\":\"Logic\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"lab4.sol\":{\"keccak256\":\"0x80546fcffc6732b521139e76adf50f6792c982a9ea081d3dd13f9fc4dc92ff72\",\"urls\":[\"bzzr://9624d1f5e88d6895cd1816cbbb114dc51d4a51d83f6b488b1c01ab0a96f13cc8\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "lab4.sol:13:9: Warning: Return value of low-level calls not used.\n        msg.sender.call.value(address(this).balance)();\n        ^--------------------------------------------^\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 322,
					"file": "lab4.sol",
					"start": 276
				},
				"type": "Warning"
			}
		],
		"sources": {
			"lab4.sol": {
				"ast": {
					"absolutePath": "lab4.sol",
					"exportedSymbols": {
						"Logic": [
							63
						]
					},
					"id": 64,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.4",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 63,
							"linearizedBaseContracts": [
								63
							],
							"name": "Logic",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 63,
									"src": "47:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "47:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 6,
									"name": "passphrase",
									"nodeType": "VariableDeclaration",
									"scope": 63,
									"src": "73:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 4,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "73:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "74683320666c3467203173206e30742068337233",
										"id": 5,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "102:22:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_f5f0611cf676da96188d253ef9345448b1644e3889e8d1c7855e6970a8fa3343",
											"typeString": "literal_string \"th3 fl4g 1s n0t h3r3\""
										},
										"value": "th3 fl4g 1s n0t h3r3"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "160:35:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 12,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 9,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "170:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 10,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "178:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 11,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "178:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "170:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 13,
												"nodeType": "ExpressionStatement",
												"src": "170:18:0"
											}
										]
									},
									"documentation": null,
									"id": 15,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "142:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "160:0:0"
									},
									"scope": 63,
									"src": "131:64:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "228:101:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 22,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 19,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 78,
																	"src": "246:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "246:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 21,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "260:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "246:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															81,
															82
														],
														"referencedDeclaration": 81,
														"src": "238:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "238:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "238:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 33,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 91,
																			"src": "306:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Logic_$63",
																				"typeString": "contract Logic"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Logic_$63",
																				"typeString": "contract Logic"
																			}
																		],
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "298:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 34,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "298:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 35,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "298:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 25,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 78,
																		"src": "276:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 29,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "276:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 30,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "276:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
																	"typeString": "function () payable returns (bool)"
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "276:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_barecall_payable$__$returns$_t_bool_$value_$",
																"typeString": "function (uint256) returns (function () payable returns (bool))"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "276:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$value",
															"typeString": "function () payable returns (bool)"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "276:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "276:46:0"
											}
										]
									},
									"documentation": null,
									"id": 40,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "218:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:0:0"
									},
									"scope": 63,
									"src": "201:128:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "382:102:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 46,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 78,
																		"src": "400:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 47,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "400:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "302e3035",
																	"id": 48,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "413:10:0",
																	"subdenomination": "ether",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50000000000000000_by_1",
																		"typeString": "int_const 50000000000000000"
																	},
																	"value": "0.05"
																},
																"src": "400:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																"id": 52,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 50,
																	"name": "_secret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "427:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 51,
																	"name": "passphrase",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 6,
																	"src": "438:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "427:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "400:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															81,
															82
														],
														"referencedDeclaration": 81,
														"src": "392:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "392:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "392:57:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 56,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "459:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 57,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "467:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "467:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "459:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "459:18:0"
											}
										]
									},
									"documentation": null,
									"id": 62,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "claim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "_secret",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "350:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 41,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "349:17:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "382:0:0"
									},
									"scope": 63,
									"src": "335:149:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 64,
							"src": "26:460:0"
						}
					],
					"src": "0:487:0"
				},
				"id": 0
			}
		}
	}
}